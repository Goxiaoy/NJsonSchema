{% if HasDescription -%}
/// {{ Description | csharpdocs }}
{% endif -%}
{% if HasDiscriminator -%}
[Newtonsoft.Json.JsonConverter(typeof(JsonInheritanceConverter), "{{ Discriminator }}")]
{% for derivedClass in DerivedClasses -%}
{% if derivedClass.IsAbstract != true -%}
[JsonInheritanceAttribute("{{ derivedClass.Discriminator }}", typeof({{ derivedClass.ClassName }}))]
{% endif -%}
{% endfor -%}
{% endif -%}
{% template Class.Annotations %}
{% if IsAbstract %}abstract{% endif %} class {{ TypeAccessModifier }}{{ClassName}} {% template Class.Inheritance %}
{
{% if IsTuple -%}
    {{ClassName}}({% for tupleType in TupleTypes -%}{{ tupleType }} item{{ forloop.index }}{% if forloop.last == false %}, {% endif %}{% endfor -%}) : base({% for tupleType in TupleTypes -%}item{{ forloop.index }}{% if forloop.last == false %}, {% endif %}{% endfor -%})
    {
    }

{% endif -%}
{% if RenderInpc or RenderPrism -%}
{% for property in Properties -%}
    {{ property.Type }} _{{ property.FieldName }}{% if property.HasDefaultValue %} = {{ property.DefaultValue }}{% endif -%};
{% endfor -%}

{% endif -%}
    {% template Class.Constructor %}
{% if RenderRecord == true -%}
    {% template Class.Constructor.Record %}

{% endif -%}
{% for property in Properties -%}
{%   if property.HasDescription -%}
    /// {{ property.Description | csharpdocs }}
{%   endif -%}
    {% template Class.Property.Annotations %}
    {{ property.Type }} {{ property.PropertyName }}{% if RenderInpc == false and RenderPrism == false %} { get; {% if property.HasSetter and RenderRecord == false %}set; {% endif %}}{% if property.HasDefaultValue and RenderRecord == false %} = {{ property.DefaultValue }};{% endif %}
{% else %}
    {
        get { return {{ property.FieldName }}; }
{%     if property.HasSetter -%}
{%         if RenderInpc -%}
        {{PropertySetterAccessModifier}}set 
        {
            if ({{ property.FieldName }} != value)
            {
                {{ property.FieldName }} = value; 
                RaisePropertyChanged();
            }
        }
{%         else -%}
        {{PropertySetterAccessModifier}}set { SetProperty(ref {{ property.FieldName }}, value); }
{%         endif -%}
{%     endif -%}
    }
{%   endif -%}

{% endfor -%}
{% if HasAdditionalPropertiesType -%}
    private System.Collections.Generic.IDictionary<string, {{ AdditionalPropertiesType }}> _additionalProperties = new System.Collections.Generic.Dictionary<string, {{ AdditionalPropertiesType }}>();

    [Newtonsoft.Json.JsonExtensionData]
    public System.Collections.Generic.IDictionary<string, {{ AdditionalPropertiesType }}> AdditionalProperties
    {
        get { return _additionalProperties; }
        {{PropertySetterAccessModifier}}set { _additionalProperties = value; }
    }

{% endif -%}
{% if GenerateJsonMethods -%}
    {% template Class.ToJson %}

    {% template Class.FromJson %}
{% endif -%}
{% if RenderInpc -%}

    {% template Class.Inpc %}
{% endif -%}

    {% template Class.Body %}
}
